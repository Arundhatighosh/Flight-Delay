<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource inline='true' name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='hyper_0'>
            <connection access_mode='readwrite' authentication='auth-username-password' author-locale='en_US' class='hyper' database-persistence='' dbname='C:/Users/pooch/Documents/My Tableau Prep Repository/Datasources/Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104.hyper' default-settings='yes' output-to-hyper-file='yes' prep-protocol-role=':prep-protocol-writer' schema='Extract' sslmode='' tablename='Extract' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='Airlines' name='textscan.0hc93wl1kgbofo1cimejt13gbjan'>
            <connection class='textscan' directory='C:/Users/pooch/Downloads/Assignment-data' filename='Airlines.csv' password='' server='' />
          </named-connection>
          <named-connection caption='airports' name='textscan.1t9oumc0mj1r501bezt5n1842ntv'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:\Users\pooch\Downloads\Assignment-data\airports.csv' dataRefreshTime='' directory='C:/Users/pooch/Downloads/Assignment-data' filename='C:/Users/pooch/AppData/Local/Temp/TableauTemp/1krxsjs17musft1bjfbbj0zz3qka/airports.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hc93wl1kgbofo1cimejt13gbjan' name='Airlines.csv' table='[Airlines#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table'>
            <columns prep-output-type='outputOperationTypeCreate'>
              <column datatype='date' date-parse-format='MM' name='Month' />
            </columns>
          </relation>
          <relation connection='textscan.0hc93wl1kgbofo1cimejt13gbjan' name='Airlines.csv' table='[Airlines#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Code' ordinal='0' />
              <column datatype='string' name='Description' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0hc93wl1kgbofo1cimejt13gbjan' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRPORT' ordinal='1' />
              <column datatype='string' name='CITY' ordinal='2' />
              <column datatype='string' name='STATE' ordinal='3' />
              <column datatype='string' name='COUNTRY' ordinal='4' />
              <column datatype='real' name='LATITUDE' ordinal='5' />
              <column datatype='real' name='LONGITUDE' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Names]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Table Names</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>31</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>422</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing_Airline_Network</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Marketing_Airline_Network]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Marketing_Airline_Network</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operated_or_Branded_Code_Share_Partners</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Operated_or_Branded_Code_Share_Partners]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Operated_or_Branded_Code_Share_Partners</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>16</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOT_ID_Marketing_Airline</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOT_ID_Marketing_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DOT_ID_Marketing_Airline</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_Code_Marketing_Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_Code_Marketing_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>IATA_Code_Marketing_Airline</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight_Number_Marketing_Airline</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight_Number_Marketing_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Flight_Number_Marketing_Airline</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>28474</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating_Airline </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Operating_Airline ]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Operating_Airline </remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>38</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOT_ID_Operating_Airline</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOT_ID_Operating_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DOT_ID_Operating_Airline</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>38</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_Code_Operating_Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_Code_Operating_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>IATA_Code_Operating_Airline</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>38</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tail_Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tail_Number]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tail_Number</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>24056</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight_Number_Operating_Airline</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight_Number_Operating_Airline]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Flight_Number_Operating_Airline</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>28474</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginAirportID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>OriginAirportID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>865</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginAirportSeqID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>OriginAirportSeqID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>893</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>865</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCityName]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>OriginCityName</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>846</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginStateName]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>OriginStateName</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>63</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginWac</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginWac]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>OriginWac</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>63</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestAirportID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DestAirportID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>855</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestAirportSeqID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DestAirportSeqID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>883</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>855</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestCityName]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DestCityName</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>836</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestStateName]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DestStateName</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestWac</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestWac]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DestWac</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4395</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3062</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>91</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelayMinutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepDelayMinutes]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepDelayMinutes</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDel15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepDel15]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepDel15</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureDelayGroups]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepartureDelayGroups</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DepTimeBlk]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DepTimeBlk</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>19</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>93</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOff]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>WheelsOff</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2976</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOn]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>WheelsOn</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3406</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>96</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3540</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3343</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>183</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelayMinutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrDelayMinutes]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrDelayMinutes</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>66</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDel15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrDel15]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrDel15</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalDelayGroups]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrivalDelayGroups</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ArrTimeBlk]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ArrTimeBlk</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>19</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CancellationCode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CancellationCode</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>870</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>818</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>823</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4360</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceGroup</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DistanceGroup]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DistanceGroup</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>44</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>44</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>374</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FirstDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FirstDepTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>FirstDepTime</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>123</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalAddGTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalAddGTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TotalAddGTime</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>123</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LongestAddGTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LongestAddGTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>LongestAddGTime</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>123</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DivAirportLandings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DivAirportLandings]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DivAirportLandings</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DivReachedDest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DivReachedDest]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DivReachedDest</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DivActualElapsedTime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DivActualElapsedTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DivActualElapsedTime</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DivArrDelay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DivArrDelay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DivArrDelay</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DivDistance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DivDistance]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DivDistance</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column datatype='real' name='[ActualElapsedTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[AirTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[ArrDel15]' role='measure' type='quantitative' />
      <column datatype='real' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='real' name='[ArrDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ArrTime]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ArrivalDelayGroups]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[CRSArrTime]' role='measure' type='quantitative' />
      <column datatype='integer' name='[CRSDepTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[CRSElapsedTime]' role='measure' type='quantitative' />
      <column caption='Total Delay' datatype='real' name='[Calculation_2059833895662571520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ArrDelay] + [CarrierDelay] + [DepDelay] + [LateAircraftDelay] + [NASDelay] + [SecurityDelay] + [WeatherDelay]' />
      </column>
      <column caption='Reset label' datatype='string' name='[Calculation_2059833895741280259]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filters&quot;' />
      </column>
      <column datatype='real' name='[Cancelled]' role='measure' type='quantitative' />
      <column datatype='real' name='[CarrierDelay]' role='measure' type='quantitative' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='integer' name='[DOT_ID_Marketing_Airline]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DOT_ID_Operating_Airline]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DayOfWeek]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DayofMonth]' role='measure' type='quantitative' />
      <column datatype='real' name='[DepDel15]' role='measure' type='quantitative' />
      <column datatype='real' name='[DepDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='real' name='[DepDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DepartureDelayGroups]' role='measure' type='quantitative' />
      <column datatype='string' name='[Description]' role='dimension' type='nominal' />
      <column datatype='integer' name='[DestAirportID]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DestAirportSeqID]' role='measure' type='quantitative' />
      <column datatype='string' name='[DestCityName]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='integer' name='[DestWac]' role='measure' type='quantitative' />
      <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[DistanceGroup]' role='measure' type='quantitative' />
      <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DivAirportLandings]' role='measure' type='quantitative' />
      <column datatype='real' datatype-customized='true' name='[DivArrDelay]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Diverted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[FirstDepTime]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Flight_Number_Marketing_Airline]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Flight_Number_Operating_Airline]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[IATA_CODE]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[LateAircraftDelay]' role='measure' type='quantitative' />
      <column datatype='real' name='[LongestAddGTime]' role='measure' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
      <column datatype='real' name='[NASDelay]' role='measure' type='quantitative' />
      <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[OriginAirportID]' role='measure' type='quantitative' />
      <column datatype='integer' name='[OriginAirportSeqID]' role='measure' type='quantitative' />
      <column datatype='string' name='[OriginCityName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[OriginWac]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[Quarter]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' name='[SecurityDelay]' role='measure' type='quantitative' />
      <column datatype='real' name='[TaxiIn]' role='measure' type='quantitative' />
      <column datatype='real' name='[TaxiOut]' role='measure' type='quantitative' />
      <column datatype='real' name='[TotalAddGTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[WeatherDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[WheelsOff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[WheelsOn]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Airlines.csv' datatype='table' name='[__tableau_internal_object_id__].[Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='airports.csv' datatype='table' name='[__tableau_internal_object_id__].[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrivalDelayGroups]' derivation='Avg' name='[avg:ArrivalDelayGroups:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2059833895662571520]' derivation='Avg' name='[avg:Calculation_2059833895662571520:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CarrierDelay]' derivation='Avg' name='[avg:CarrierDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateAircraftDelay]' derivation='Avg' name='[avg:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NASDelay]' derivation='Avg' name='[avg:NASDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SecurityDelay]' derivation='Avg' name='[avg:SecurityDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WeatherDelay]' derivation='Avg' name='[avg:WeatherDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Median' name='[med:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateAircraftDelay]' derivation='Median' name='[med:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateAircraftDelay]' derivation='Median' name='[med:LateAircraftDelay:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Code]' derivation='None' name='[none:Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
      <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DepDelayMinutes]' derivation='Stdev' name='[std:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActualElapsedTime]' derivation='Sum' name='[sum:ActualElapsedTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AirTime]' derivation='Sum' name='[sum:AirTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrTime]' derivation='Sum' name='[sum:ArrTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrivalDelayGroups]' derivation='Sum' name='[sum:ArrivalDelayGroups:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CRSArrTime]' derivation='Sum' name='[sum:CRSArrTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CRSDepTime]' derivation='Sum' name='[sum:CRSDepTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CRSElapsedTime]' derivation='Sum' name='[sum:CRSElapsedTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2059833895662571520]' derivation='Sum' name='[sum:Calculation_2059833895662571520:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CarrierDelay]' derivation='Sum' name='[sum:CarrierDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DOT_ID_Marketing_Airline]' derivation='Sum' name='[sum:DOT_ID_Marketing_Airline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DOT_ID_Operating_Airline]' derivation='Sum' name='[sum:DOT_ID_Operating_Airline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DayOfWeek]' derivation='Sum' name='[sum:DayOfWeek:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DayofMonth]' derivation='Sum' name='[sum:DayofMonth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDel15]' derivation='Sum' name='[sum:DepDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Sum' name='[sum:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepTime]' derivation='Sum' name='[sum:DepTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepartureDelayGroups]' derivation='Sum' name='[sum:DepartureDelayGroups:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DestAirportID]' derivation='Sum' name='[sum:DestAirportID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DestAirportSeqID]' derivation='Sum' name='[sum:DestAirportSeqID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DestWac]' derivation='Sum' name='[sum:DestWac:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DistanceGroup]' derivation='Sum' name='[sum:DistanceGroup:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DivAirportLandings]' derivation='Sum' name='[sum:DivAirportLandings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Diverted]' derivation='Sum' name='[sum:Diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FirstDepTime]' derivation='Sum' name='[sum:FirstDepTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flight_Number_Marketing_Airline]' derivation='Sum' name='[sum:Flight_Number_Marketing_Airline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flight_Number_Operating_Airline]' derivation='Sum' name='[sum:Flight_Number_Operating_Airline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateAircraftDelay]' derivation='Sum' name='[sum:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LongestAddGTime]' derivation='Sum' name='[sum:LongestAddGTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NASDelay]' derivation='Sum' name='[sum:NASDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OriginAirportID]' derivation='Sum' name='[sum:OriginAirportID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OriginAirportSeqID]' derivation='Sum' name='[sum:OriginAirportSeqID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OriginWac]' derivation='Sum' name='[sum:OriginWac:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quarter]' derivation='Sum' name='[sum:Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SecurityDelay]' derivation='Sum' name='[sum:SecurityDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TaxiIn]' derivation='Sum' name='[sum:TaxiIn:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TaxiOut]' derivation='Sum' name='[sum:TaxiOut:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalAddGTime]' derivation='Sum' name='[sum:TotalAddGTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WeatherDelay]' derivation='Sum' name='[sum:WeatherDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WheelsOff]' derivation='Sum' name='[sum:WheelsOff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WheelsOn]' derivation='Sum' name='[sum:WheelsOn:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Sum' name='[sum:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AIRPORT]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[COUNTRY]' />
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Action (Description,Operating_Airline )' hidden='true' name='[Action (Description,Operating_Airline )]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Description]' />
          <groupfilter function='level-members' level='[Operating_Airline ]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Month))' hidden='true' name='[Action (MONTH(Month))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Month:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (OriginCityName,Origin)' hidden='true' name='[Action (OriginCityName,Origin)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OriginCityName]' />
          <groupfilter function='level-members' level='[Origin]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Month))' hidden='true' name='[Action (QUARTER(Month))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Month:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset label,Description,Operating_Airline )' hidden='true' name='[Action (Reset label,Description,Operating_Airline )]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2059833895741280259]' />
          <groupfilter function='level-members' level='[Description]' />
          <groupfilter function='level-members' level='[Operating_Airline ]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Month),QUARTER(Month))' hidden='true' name='[Action (YEAR(Month),QUARTER(Month))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Month:ok]' />
          <groupfilter function='level-members' level='[qr:Month:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Airport)' hidden='true' name='[Tooltip (Airport)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AIRPORT]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY'>
          <field>[COUNTRY]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Description:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;Cape Air&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Capital Cargo International&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Comair Inc.&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;GoJet Airlines, LLC d/b/a United Express&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Commutair Aka Champlain Enterprises, Inc.&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Trans States Airlines&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Compass Airlines&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Horizon Air&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Air Wisconsin Airlines Corp&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Peninsula Airways Inc.&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Empire Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;09Q&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0MQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1MQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3F&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8N&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ACL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AF&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AIT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AMQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;APQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ASH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AVC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BAC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BEY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CEQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CKI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CSK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CZ (1)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EAQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EHA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FLR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;G3 (1)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GFC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HCQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HOL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HYA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IPQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JX (1)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MST&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;N6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NRN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OOZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PAQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PS (1)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SFQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SKT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SYM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TDQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TLQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UTQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;V8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WES&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WRA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XAE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XBJ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Z3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZX (1)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1DQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2F&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4N&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6B&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7S (1)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ADV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BJQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DHL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EEX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EOQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GCH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GLW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HFQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IKQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LOQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NWQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OMH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SJA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SNB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SSA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SVW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TB (1)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;THQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TXQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WLH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;XAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;XDC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Y8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ZN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;04Q&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0HQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1I&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2R&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4S (1)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6P&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AAA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ACH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AEF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;APH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ARZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ATX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BEA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BYA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CRT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EGA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GDW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GPA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HVQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JCM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KEE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KWQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LC (2)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MHO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MRC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MYQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NOQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OMQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;QD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RAY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RIV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RSQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAJ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SKJ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SNV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SX (1)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TCI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TIS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TSF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TZQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UX (1)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VIG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WDQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;X9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XBC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XDH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ZUQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0RQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14Q&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1RQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5G&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7G (1)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AAT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ACQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AFQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AKQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ASQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AVQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BAQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BR (1)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CGL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CLF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CPA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CSQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DAU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DQQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ECA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FCQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GG (2)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GSC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HB (1)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HPZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ICH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JIQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KLQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MLL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MTR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NAQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NGL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NUM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OFF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PCA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;QQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RMV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RWG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SBQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SLZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SPH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TFQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TNS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TVL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VAG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VLA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WS (1)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;XAI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;XBR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;XPE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0OQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10Q&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1NQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3M&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8Q&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AAP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ACN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AFA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AIY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AMR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;APS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ASI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AVG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C8 (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CET&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CSL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CZQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EAS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FNQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GAL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GFQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HAQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HOQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IPS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JXQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KIN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;L2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MAV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MKQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NFA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NSQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OD (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;QN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RD (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RL (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RV (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SFQ (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SLO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;STQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SZQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TDQ (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TMA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UAI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;V9&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VJT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WET&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WRD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;XAF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;XBM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;XL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Z3 (1)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;05Q&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0J&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1IQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6R&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8F&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AAB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AEO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AIM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;API&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ATT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BN (1)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BZQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CRV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E72&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EGJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ERO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FAA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FL (1)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;H2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HLQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HWK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;INQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KET&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KWZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LRQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MRQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NET&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NPA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PA (1)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PET&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PRQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;QF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RSV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SKL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SXP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TSI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;U2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UYQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VX (1)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WNQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XAA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XBF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ZV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1AQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1XQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4M&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5Y&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7Q&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9R&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ABO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AHQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ARN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ATH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AZQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BIQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BUQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CAV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CUQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EDE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EMP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EXQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GBQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GKQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GUN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HRQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;III&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KAI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LNQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MNZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MUQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NJA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NWS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OWQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PDA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PLA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;QWE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RHA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ROS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SIQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SN (1)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SRL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TXA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;URQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VCQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WIR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Y4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ZL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0BQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1EQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2K&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4O&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6C&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7Z&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9K&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AOQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AYQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BDE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BLQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CBA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CVA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DHQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EEZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FTI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GCQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GWA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HFS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HSZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IMP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KTQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LBQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MGQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MPA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MWA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NKQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OZ (1)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PE (1)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PRM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Q5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RID&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RRT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SEG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SNC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SSP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SWA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TBQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TRQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TXY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VV (1)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WCA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WLQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WWI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XAU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XDD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ZO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0WQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17Q&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1VQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4E (1)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5V&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7N&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9M&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ABH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ANO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ARI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ASW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AWA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BBQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BHQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BTQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CMD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CQI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CTQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DEC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ECR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EXC (1)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FDQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GAV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GJ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HEP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HRA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IXQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JKQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KOD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LKN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MMH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NBQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NI (1)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PKQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;QT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ROE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SCY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SI (1)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SMQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TAQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TGQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VB (1)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XBZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XYZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ZK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;06Q&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0JQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1JQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2U&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4W&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6U&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8J&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AAE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AEQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AME&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;APL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ASC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BEQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BNQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CDQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CYQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EGL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ERQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FAC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FLA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FYB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;H5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HMZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IOW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JCZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KFS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LCT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LSQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MAI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MRR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NEV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NPT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ONQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PA (2)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PFA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PNQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PRR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;QG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RJS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RTQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SFI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SKM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SOA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TCO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TSQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;U5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;V4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VIQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WEB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XAB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XBH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0TQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;15Q&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1SQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4B (1)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5G (1)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7H&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9J&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AAV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ACS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AFS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ARA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ASR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AVR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BGQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BRK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CGO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CLQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CPC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ECI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EKA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EWA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;G7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GSL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HBQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ICQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;K7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LHA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MLX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MTV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NUQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PCL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;POM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RNQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SCN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SHS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SPQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TAC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TFZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UMQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VAQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VLY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WA (1)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WGL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WSK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;XAJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;XBT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;XPQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ZE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0UQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1TQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5J&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7I&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9V&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AAZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AGA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ANI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ARB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AVS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BAT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BHK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CPQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CTH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ECL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ELL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EXA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GAS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GSQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HQ (1)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;K8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LAH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LIQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LXQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MDC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MTX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NAT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NHA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NVQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OHA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PCQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PIQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;QS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RZZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SCO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SMC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SPR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SUA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TAF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TPQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VAS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VOQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WAC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WGQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XAK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XBV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ZFZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0YQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1WQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4H&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5X&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7P&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9N&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ADB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AHC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AWQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BUH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CAT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CMQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CTR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DFS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DVO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ED&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EME&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EXP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FRW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GBA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GJ (1)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GUL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HRG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KAH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LLA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LZQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MEA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MNA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MUA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OIZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PD (1)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PPQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;QTQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RGQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ROQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SDQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TAS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TRA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TX (1)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WAQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WIL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;XAQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;XC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Y2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ZKQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1BQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2E&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4M (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ABX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ADR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AOI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ARO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ATN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AXQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BCQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BUQ (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CAZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CNN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CRE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CUS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DH (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DXA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EET&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ENT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EXR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FFQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FSA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GCA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HEU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HRZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IJ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J7&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JMA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KAQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KR (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MVA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NCE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NJE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NXQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PDQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PLQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RAL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RIA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S6 (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SE (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SIQ (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SVL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;THO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TXE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VSA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WAW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WV (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;XAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;XDA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Y7&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ZMZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0Q&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12Q&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1PQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3S&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5D&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7F&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8R&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AAQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ACO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AFE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AMT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;APY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AVI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BAK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BFG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CSA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CSM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DPA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EUQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FOR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GAQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HAR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HOR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KKQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;L3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LUQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MAX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ML&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MT (1)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NAC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NFQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NTH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OP (1)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PBA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PHR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;POA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;QO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RDR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RLQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RVA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SFS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;STR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TEN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WFS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WRT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;XAG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;XBP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;XP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZYZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;07Q&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0LQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1LQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3C&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4Y&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6Y&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8L&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AAI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AIQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AMI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;APN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ASD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AVA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BAA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BOA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EAI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ESQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FAQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FLM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G3&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GF (1)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;H6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HNS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IPI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KXZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LEQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LSZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MIY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N5 (1)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NEW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OCR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OWS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PAI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PFQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PNR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RCA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SKS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SOE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SYB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TCQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TKQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TTM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;U7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;V5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIQ (1)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W3&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WEQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XBI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;YX (1)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ZW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0CQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1FQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2M&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4R&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6F&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9W&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A7 (1)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AEC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AIE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AOR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ATS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BDQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BXQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CRO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CVQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EFA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;F2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FJ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FVA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GCS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GMA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GWE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HIQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JAQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MAA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MPC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NLQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OMK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OZA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PMA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PRN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RIO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SEM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SNE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SSQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SWT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TIE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TRR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TYE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VV (2)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WCI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WWQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;XAY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;XDE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YBQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ZP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0VQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1UQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4E&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5L&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7M&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9L&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ACW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AGQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ANM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ARD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ASU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AVZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BAY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BHO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CMB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CPT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CTL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DEA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ECQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EXC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FDM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FRS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GAT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GIQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HQQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IEX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IW (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JK (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;K8 (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LJ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MDU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MM (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NVX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OHZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OTT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;POQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PVA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;QS (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RES&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SCT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SMO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TQQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TWE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UNQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WAI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WSU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XAM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XBX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ZIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0QQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;13Q&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1QQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3U&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5F&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7G&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8V&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ACP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AJQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ANB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AQQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ASP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BFQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CGA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CP (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CSN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DPI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EBQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EJQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FBI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FOS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GG (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ICF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JI (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;K3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;L7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LGQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ML (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MTA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NTQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OPQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PBQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;POC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PTQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;QOZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RMH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RVQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SPG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TNQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TV (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VA (1)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WFT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;XAH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;XBQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;XPA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZAQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;02Q&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0GQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1HQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2O&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4S&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6H&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8D&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ACD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ACG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AED&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AIG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;APE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ARS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BMT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CC (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DIC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EFQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;F8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FJ (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GOF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HUB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;INA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KEA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LC (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LP (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MU (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NEQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PEQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PMT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PRO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;QB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RAQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RIQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RSC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SEP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SKI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SNK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SSS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TCE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TIQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WNG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;X4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;XAZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;XDF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ZS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ArrTime:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DistanceGroup:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:WheelsOff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:OriginAirportSeqID:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:NASDelay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DestAirportID:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:TaxiIn:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:LateAircraftDelay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:LateAircraftDelay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:LateAircraftDelay:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:CRSDepTime:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Flight_Number_Marketing_Airline:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrivalDelayGroups:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ArrivalDelayGroups:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DivAirportLandings:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:WheelsOn:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ArrDel15:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DestAirportSeqID:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:TaxiOut:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DayofMonth:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:NASDelay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[std:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ActualElapsedTime:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:OriginWac:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:WeatherDelay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DOT_ID_Operating_Airline:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:LongestAddGTime:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DestWac:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:TotalAddGTime:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:CRSElapsedTime:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Flight_Number_Operating_Airline:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[__tableau_internal_object_id__].[cnt:airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:LateAircraftDelay:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[__tableau_internal_object_id__].[cnt:Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:LONGITUDE:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DayOfWeek:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DepDel15:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:OriginAirportID:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Year:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:SecurityDelay:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Distance:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:WeatherDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:CarrierDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DepTime:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Quarter:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:LATITUDE:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:CarrierDelay:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DOT_ID_Marketing_Airline:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:Calculation_2059833895662571520:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:CRSArrTime:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:FirstDepTime:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:AirTime:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:DepartureDelayGroups:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:SecurityDelay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airlines.csv' id='Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA'>
            <properties context=''>
              <relation connection='textscan.0hc93wl1kgbofo1cimejt13gbjan' name='Airlines.csv' table='[Airlines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table'>
                <columns prep-output-type='outputOperationTypeCreate'>
                  <column datatype='date' date-parse-format='MM' name='Month' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='airports.csv' id='airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6'>
            <properties context=''>
              <relation connection='textscan.0hc93wl1kgbofo1cimejt13gbjan' name='airports.csv' table='[airports#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='IATA_CODE' ordinal='0' />
                  <column datatype='string' name='AIRPORT' ordinal='1' />
                  <column datatype='string' name='CITY' ordinal='2' />
                  <column datatype='string' name='STATE' ordinal='3' />
                  <column datatype='string' name='COUNTRY' ordinal='4' />
                  <column datatype='real' name='LATITUDE' ordinal='5' />
                  <column datatype='real' name='LONGITUDE' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[IATA_Code_Operating_Airline]' />
              <expression op='[Code]' />
            </expression>
            <first-end-point object-id='Migrated Data' />
            <second-end-point object-id='Airlines.csv_DE3B8EC7DC814D21B9F2E5A44AB5BCDA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Dest]' />
              <expression op='[IATA_CODE]' />
            </expression>
            <first-end-point object-id='Migrated Data' />
            <second-end-point object-id='airports.csv_5F2ABA3AC17F43CA8838C5372C7F22F6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_06EBD7193C2940838DD6A806011C3755]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Central Tendency for Each Airline' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Central Tendency for Each Airline' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2_516A2E502C234E618AC4070C1A747D4B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3_F65B2AC6EB7D4F7EAFFAB1A7EAEDACBF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4_9E574A15482B4105AFBF5D455222B663]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airline Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Highest Airline Delays on Quarterly Basis </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column datatype='real' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_2059833895662571520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ArrDelay] + [CarrierDelay] + [DepDelay] + [LateAircraftDelay] + [NASDelay] + [SecurityDelay] + [WeatherDelay]' />
            </column>
            <column datatype='real' name='[CarrierDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[LateAircraftDelay]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[NASDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
            <column datatype='real' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[WeatherDelay]' role='measure' type='quantitative' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2059833895662571520]' derivation='Sum' name='[sum:Calculation_2059833895662571520:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (QUARTER(Month))]'>
            <groupfilter from='1' function='range' level='[qr:Month:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]'>
            <groupfilter function='level-members' level='[qr:Month:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (QUARTER(Month))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]' />
              <size column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EF1E99A7-95A6-47B5-99D2-EFE2D46EB52B}' />
    </worksheet>
    <worksheet name='Avg. Delay Minutes for Each State '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Average Delay Minutes for Each State</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='real' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action3_F65B2AC6EB7D4F7EAFFAB1A7EAEDACBF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' included-values='in-range'>
            <min>0.85364260045736684</min>
            <max>4.023188405797101</max>
          </filter>
          <filter class='quantitative' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' included-values='in-range'>
            <min>0.6390224358974359</min>
            <max>4.5681159420289852</max>
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Longitude (generated)]' field-type='quantitative' max='39573222.476517096' min='15902635.381831005' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Latitude (generated)]' field-type='quantitative' max='7354879.9787739832' min='1521370.4984260292' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:COUNTRY:nk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:STATE:nk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='red_gold_10_0' type='interpolated' />
                <format attr='density-kernel-size' value='1.1314364671707153' />
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Latitude (generated)]</rows>
        <cols>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6AF3A382-9535-47C9-B80E-59400C66329D}' />
    </worksheet>
    <worksheet name='Central Tendency for Each Airline'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Central Tendency Measures for Each Airline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column datatype='real' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
            <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Median' name='[med:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DepDelayMinutes]' derivation='Stdev' name='[std:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>9.0</max>
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Description:nk]' />
              <groupfilter function='member' level='[none:Description:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Operating_Airline :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Month:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' />
              <size column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[std:DepDelayMinutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E6AB8327-4F76-47DC-B41F-6177767D1B16}' />
    </worksheet>
    <worksheet name='Delay cause for each airline'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Causes of Delay for Each Airline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='real' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[CarrierDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[LateAircraftDelay]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[NASDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[WeatherDelay]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CarrierDelay]' derivation='Avg' name='[avg:CarrierDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LateAircraftDelay]' derivation='Avg' name='[avg:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NASDelay]' derivation='Avg' name='[avg:NASDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SecurityDelay]' derivation='Avg' name='[avg:SecurityDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WeatherDelay]' derivation='Avg' name='[avg:WeatherDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LateAircraftDelay]' derivation='Median' name='[med:LateAircraftDelay:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:CarrierDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:SecurityDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:WeatherDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:NASDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:LateAircraftDelay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelay:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:CarrierDelay:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelay:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:LateAircraftDelay:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:SecurityDelay:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:WeatherDelay:qk]&quot;</bucket>
              <bucket>&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:NASDelay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action3_F65B2AC6EB7D4F7EAFFAB1A7EAEDACBF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F65B2AC6EB7D4F7EAFFAB1A7EAEDACBF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[COUNTRY]' />
              <groupfilter function='level-members' level='[STATE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (MONTH(Month))]'>
            <groupfilter function='level-members' level='[tmn:Month:ok]' user:ui-action-filter='[Action4_9E574A15482B4105AFBF5D455222B663]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]'>
            <groupfilter function='level-members' level='[none:Operating_Airline :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Airport)]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Country,State)]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (MONTH(Month))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' value='95' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Multiple Values]</rows>
        <cols>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A7AAD629-9B04-4704-B27E-D4B87A50A0C9}' />
    </worksheet>
    <worksheet name='Departure Delays for Each Airport and City'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Departure Delays for Each Airport and City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column datatype='real' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestCityName]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
            <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[DestCityName]' derivation='None' name='[none:DestCityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Description,Operating_Airline )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_06EBD7193C2940838DD6A806011C3755]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Description]' member='&quot;JetBlue Airways&quot;' />
              <groupfilter function='member' level='[Operating_Airline ]' member='&quot;B6&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Operating_Airline :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Month:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Description,Operating_Airline )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Longitude (generated)]' field-type='quantitative' max='36364190.264853813' min='17966922.174095731' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Latitude (generated)]' field-type='quantitative' max='5663886.9833356459' min='901473.81452684035' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d37295' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' />
              <size column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' />
              <lod column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:DestCityName:nk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Dest:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#aa0000' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Latitude (generated)]</rows>
        <cols>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EA5C1BD8-6C2B-4C9D-85FE-389A24E548D5}' />
    </worksheet>
    <worksheet name='Diverted and Cancelled Flights per Destination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Diverted and Cancelled Flights for 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column datatype='real' name='[Cancelled]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diverted]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diverted]' derivation='Sum' name='[sum:Diverted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]'>
            <groupfilter function='level-members' level='[mn:Month:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[tmn:Month:qk]' scope='cols' value='Month' />
            <format attr='auto-subtitle' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[tmn:Month:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]' scope='rows' value='Number of Cancelled Flights ' />
            <format attr='title' class='0' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]' scope='rows' value='Number of Diverted Flights' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cancelled:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diverted:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cancelled:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diverted:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cancelled:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diverted:&#9;</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Cancelled:qk] + [Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk])</rows>
        <cols>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[tmn:Month:qk]</cols>
      </table>
      <simple-id uuid='{44C165BD-5B5C-4044-98DC-E67A451302B4}' />
    </worksheet>
    <worksheet name='Quaterly Delay Causes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Delay causes for Each Quarter </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column datatype='real' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[CarrierDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[LateAircraftDelay]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[NASDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
            <column datatype='real' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[WeatherDelay]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CarrierDelay]' derivation='Avg' name='[avg:CarrierDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LateAircraftDelay]' derivation='Avg' name='[avg:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NASDelay]' derivation='Avg' name='[avg:NASDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SecurityDelay]' derivation='Avg' name='[avg:SecurityDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WeatherDelay]' derivation='Avg' name='[avg:WeatherDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:CarrierDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:LateAircraftDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:NASDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:SecurityDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:WeatherDelay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]'>
            <groupfilter function='level-members' level='[none:Operating_Airline :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]'>
            <groupfilter from='1' function='range' level='[qr:Month:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Multiple Values]</rows>
        <cols>([Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok] / ([Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok] / [Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{6ED0CE09-CEBE-4928-B7DE-C50809E41A62}' />
    </worksheet>
    <worksheet name='Total Delays for Each Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Regular'>Total Number of Delays for Each Airport</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
          </datasources>
          <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='real' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Delay' datatype='real' name='[Calculation_2059833895662571520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ArrDelay] + [CarrierDelay] + [DepDelay] + [LateAircraftDelay] + [NASDelay] + [SecurityDelay] + [WeatherDelay]' />
            </column>
            <column datatype='real' name='[CarrierDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[LateAircraftDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[NASDelay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column datatype='real' name='[WeatherDelay]' role='measure' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2059833895662571520]' derivation='Sum' name='[sum:Calculation_2059833895662571520:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F65B2AC6EB7D4F7EAFFAB1A7EAEDACBF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[COUNTRY]' />
              <groupfilter function='level-members' level='[STATE]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' included-values='in-range' />
          <slices>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]</column>
            <column>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' />
              <size column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' />
              <text column='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:AIRPORT:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;&#9;   </run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:AIRPORT:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Number of Delays:</run>
                <run bold='true'><![CDATA[<[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{872347BC-1947-43F6-A501-EB5E2FD58ACA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
      </datasources>
      <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
        <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
        <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
        <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='23' param='vert' type-v2='layout-flow' w='99038' x='481' y='929'>
            <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99038' x='481' y='929'>
              <zone h='98142' id='5' type-v2='layout-basic' w='85380' x='481' y='929'>
                <zone h='49070' id='13' name='Central Tendency for Each Airline' w='85380' x='481' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49072' id='16' name='Departure Delays for Each Airport and City' w='85380' x='481' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='227' h='98142' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='13658' x='85861' y='929'>
                <zone h='7085' id='14' mode='dropdown' name='Central Tendency for Each Airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type-v2='filter' w='13658' x='85861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8478' id='15' name='Central Tendency for Each Airline' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='color' w='13658' x='85861' y='8014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8711' id='18' name='Departure Delays for Each Airport and City' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='color' w='13658' x='85861' y='16492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13473' id='19' name='Departure Delays for Each Airport and City' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='size' w='13658' x='85861' y='25203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17538' id='24' name='Central Tendency for Each Airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type-v2='filter' values='database' w='13658' x='85861' y='38676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='55' param='vert' type-v2='layout-flow' w='99038' x='481' y='929'>
                <zone h='7085' id='14' mode='dropdown' name='Central Tendency for Each Airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type-v2='filter' w='13658' x='85861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17538' id='24' mode='checkdropdown' name='Central Tendency for Each Airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type-v2='filter' values='database' w='13658' x='85861' y='38676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49070' id='13' is-fixed='true' name='Central Tendency for Each Airline' w='85380' x='481' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='15' name='Central Tendency for Each Airline' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='color' w='13658' x='85861' y='8014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49072' id='16' is-fixed='true' name='Departure Delays for Each Airport and City' w='85380' x='481' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8711' id='18' name='Departure Delays for Each Airport and City' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='color' w='13658' x='85861' y='16492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13473' id='19' name='Departure Delays for Each Airport and City' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type-v2='size' w='13658' x='85861' y='25203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9D4F5B28-3C1F-4C62-902B-06E2B036CDBA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
      </datasources>
      <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
        <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
        <column-instance column='[Month]' derivation='Quarter' name='[qr:Month:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99038' x='481' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='89411' x='481' y='929'>
              <zone h='49071' id='3' name='Quaterly Delay Causes' w='89411' x='481' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='10' name='Airline Delays' w='89411' x='481' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9627' x='89892' y='929'>
              <zone h='7085' id='8' mode='checkdropdown' name='Quaterly Delay Causes' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' show-all='false' type-v2='filter' w='9627' x='89892' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20557' id='9' name='Quaterly Delay Causes' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type-v2='color' w='9627' x='89892' y='8014'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='37' param='vert' type-v2='layout-flow' w='99038' x='481' y='929'>
                <zone fixed-size='280' h='49071' id='10' is-fixed='true' name='Airline Delays' w='89411' x='481' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7085' id='8' mode='checkdropdown' name='Quaterly Delay Causes' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' show-all='false' type-v2='filter' w='9627' x='89892' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Quaterly Delay Causes' w='89411' x='481' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20557' id='9' name='Quaterly Delay Causes' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type-v2='color' w='9627' x='89892' y='8014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{212EF27C-FA5C-4A3C-8021-DAE3CDF60C96}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99038' x='481' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='89411' x='481' y='929'>
              <zone h='49071' id='3' name='Avg. Delay Minutes for Each State ' w='89411' x='481' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='22' name='Total Delays for Each Airport' w='89411' x='481' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9627' x='89892' y='929'>
              <zone h='8478' id='8' name='Avg. Delay Minutes for Each State ' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' type-v2='color' w='9627' x='89892' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='23' name='Total Delays for Each Airport' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' type-v2='color' w='9627' x='89892' y='9407'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='38' param='vert' type-v2='layout-flow' w='99038' x='481' y='929'>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Avg. Delay Minutes for Each State ' w='89411' x='481' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='8' name='Avg. Delay Minutes for Each State ' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' type-v2='color' w='9627' x='89892' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='22' is-fixed='true' name='Total Delays for Each Airport' w='89411' x='481' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='23' name='Total Delays for Each Airport' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' type-v2='color' w='9627' x='89892' y='9407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B026A0A0-1D9B-4497-88FD-127CEB0AB6EB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104' />
      </datasources>
      <datasource-dependencies datasource='Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104'>
        <column datatype='string' name='[Operating_Airline ]' role='dimension' type='nominal' />
        <column-instance column='[Operating_Airline ]' derivation='None' name='[none:Operating_Airline :nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49071' id='7' param='horz' type-v2='layout-flow' w='99038' x='481' y='929'>
            <zone h='49071' id='5' type-v2='layout-basic' w='89411' x='481' y='929'>
              <zone h='49071' id='3' name='Delay cause for each airline' w='89411' x='481' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49071' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9627' x='89892' y='929'>
              <zone h='7085' id='8' mode='dropdown' name='Delay cause for each airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type-v2='filter' w='9627' x='89892' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20557' id='9' name='Delay cause for each airline' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type-v2='color' w='9627' x='89892' y='8014'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49071' id='10' name='Diverted and Cancelled Flights per Destination' w='99038' x='481' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='25' param='vert' type-v2='layout-flow' w='99038' x='481' y='929'>
                <zone h='7085' id='8' mode='dropdown' name='Delay cause for each airline' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type-v2='filter' w='9627' x='89892' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Delay cause for each airline' w='89411' x='481' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20557' id='9' name='Delay cause for each airline' pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type-v2='color' w='9627' x='89892' y='8014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='10' is-fixed='true' name='Diverted and Cancelled Flights per Destination' w='99038' x='481' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{832B139F-C3A5-423D-AC71-C63764F82B04}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Departure Delays for Each Airport and City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type='color' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type='size' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Dest:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:DestCityName:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Origin:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:OriginCityName:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:STATE:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4F74C39-1B97-40DE-84B1-854C952D203C}' />
    </window>
    <window class='worksheet' name='Quaterly Delay Causes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type='filter' />
            <card mode='checkdropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DD347C1-C273-4250-A8F8-DC54EDAAED70}' />
    </window>
    <window class='worksheet' name='Airline Delays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:SecurityDelay:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Calculation_2059833895741280259:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:DestCityName:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77510A68-3474-41CF-A315-ADBF684E1975}' />
    </window>
    <window class='worksheet' name='Total Delays for Each Airport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Calculation_2059833895662571520:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:AIRPORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5CBE1E7-331A-4C08-817F-6789FDF2E0C7}' />
    </window>
    <window class='worksheet' name='Central Tendency for Each Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]' type='filter' />
            <card mode='checkdropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[qr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C17C43C-B969-48E1-8094-E39A82E9FFC9}' />
    </window>
    <window class='worksheet' maximized='true' name='Diverted and Cancelled Flights per Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Dest:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Origin:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:STATE:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[sum:Diverted:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[tmn:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8293601-AC5F-4215-9B21-AB11FFA017DA}' />
    </window>
    <window class='worksheet' name='Delay cause for each airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[mn:Month:ok]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Code:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Dest:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:DestCityName:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Origin:nk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D2F5384-3F08-4103-8128-D2B070A18EF2}' />
    </window>
    <window class='worksheet' name='Avg. Delay Minutes for Each State '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]</field>
            <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1BCBAC5-7C67-47F4-85F4-B9CF90D51BE3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Central Tendency for Each Airline'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]</field>
                    <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[med:DepDelayMinutes:qk]</field>
                    <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Description:nk]</field>
                    <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[none:Operating_Airline :nk]</field>
                    <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[std:DepDelayMinutes:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2.5952226432474301</value>
                  <value>0.0</value>
                  <value>&quot;JetBlue Airways&quot;</value>
                  <value>&quot;B6&quot;</value>
                  <value>13.517915887732547</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:DepDelayMinutes:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Departure Delays for Each Airport and City'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{F6FD258D-FF49-497F-BCED-EA37F9AD23A4}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Airline Delays'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Quaterly Delay Causes'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{87005009-4DBB-4014-8320-55840B4A0C93}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Avg. Delay Minutes for Each State '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[avg:ArrDelayMinutes:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Delays for Each Airport'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{023AB30D-CC90-44EA-80D5-593873B98BCE}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Delay cause for each airline'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Flights Cleaned-node-2018 - cleaned-6296396906ad4f2b8143c8653f3f2104].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Diverted and Cancelled Flights per Destination'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{E12FF14B-FA85-4621-AD0C-AF9F2F686367}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline Delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg. Delay Minutes for Each State ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Central Tendency for Each Airline' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      Hrn5gLHs/wO8qBAiXmas9gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3deXhb1Zn48e+5V8uVvNuJnThObGdfIWEpAULYw0Ap3aeFdrrOdF/o3tKy
      FMrW8utQoLSl2wydtvRHpy0UCFsSmgKJCdmd2E6cOInXeJctS7r36t4zfzhxgERJvMiyrfN5
      njyRZEn3lXTfu533nCOklBJFSVNaqgNQlFRSCaCkNZUASlpTCaCkNZUASlpTCaAMSdyKsWPb
      Fprbu5O2DCnjrP7rn9i8az8ATQf3sWnTJg42HuZEFy+ffuZp4o57yveN9rTz6G9/zeEeSyWA
      MniO2cu3bvwCL67fwNr1ryClxHVdXCnhyG3o/3/gb0duH73/1ttHvfGxxt0VrN1+iKmTcwF4
      +v//itXrNvCTu2/hT8++CnBsucBzz67GcSVSum9a9tFlySPxPfvn/8YKTiXDp+EZ9W9PGffq
      KisoWHwZX/3cDQBUbniBhx/9C2FT4/4f38rtd/+C++/9Ct/86g/59Mev5M7//A2Bgmnc890v
      ccett9ARNvnoF7/DvvV/oqKqgXMuvpZP3fAO7L4Ovv2tm+iOWKx6/ydp2PAnqna0sKXqMooL
      8wF4+/v/jTOLLL7wzZ+wvNTLHff9HLxB7vzhfUeis/nBt77J/pZOrvzAZ2jd/CSrPvldXn3s
      fpZ/4MsszrP4w5Nr8ObsZsmsQrUHUIauf4MqER4fCxcvwYh30xY23/ScjKxcMg0vHmDPrs10
      OkGWLZzFunX/pKhoCnHbQmgaEqjbtZny5dfxq1/8mA0vvMi73v0eVr33I1x78dnHLVsTgvVr
      n6d49mKKMhxe214LgGOaTCmbw7Il86iuruGd113N6meeYn8XLJyWAxmFvHfVCr70vXtprXxZ
      7QGUwStfspzu336N++5vI79oOk7jNnpFHpYdB81LuGkPP/nJz+iIWbS1tjJzwRJqK7fjL5iO
      142hZ+SxtHw2XfXbOXvZGdTsrgLeztSyOWz/5b3cd3AjU+ctQpxg2U8+9l/8oamGy677OKUc
      YsuaSmaXzqWksP8wKdx2gFe21rCoNBcCUH7mRTQ9eANL3vF5NPHmd5y/ZAlClUIoQ+HYJjU1
      NUwqLiXH0Nhff5jsgIe8KdPpaa3H1gPY0RhlpcXsrakhkFvIjOJCQh2HOdDYyuy585CxXvYd
      bGTWvPlkGj4AQh2HaWjtYf682diREB19DtOKCgBoaThAc1sXhdNmUFxYgEDScGAfPSbMmzOL
      A3X7KS+fSX3dHgJZeURtF6/Tx0MPPMQXb72XqVn9y2hrrsefO4XsgFclgDKxba/4B2HvJC44
      68R7FJUASlpTJ8FKWhuxBJAD138VZfwY0T2AOppSxht1CKSkNZUASlpTCaCkNZUASlpTCaCk
      NZUASlpTCaCktUFXg0opqautIeZ6yfA4hGIuSxbNT0ZsipJ0g04AIaAgP4+2XgvHiVNoSCJS
      Yryh14+ijBeD3wO4Ntu276Zs7nzMSDeNMckyIRBa/9GUrusjHqSiJMuIVYMerQVSCaCMJ+ok
      WElrqkvkILh9bbit1akO4zgiawr6pDmpDmNcUgkwCE7D68Se+UaqwziOd9G70VfdkeowxiV1
      CKSkNZUASlpTCaCkNZUASlobdAJIKWnYX013JE7joTr27DuYjLgUZVQM6SpQliEIxVyi4TDS
      E8SVEpkGpRBjtdO/KyXxeDzVYYxLQ0oAgcCO2xROnUbroUYsIfCnQSmE1MbmEaMmBB6PuqI9
      FEP4RSU9tg9fvBevJsifPgNj5ONSlFExhGpQjZLSsoH7mSMZjaKMsrG5T1eUUaISQElrKgGU
      tKYSQElrKgGUtKYSQElrQ0oA13FwpcR14ti2aoFUxq8h1QLt27mBhi6bvTXV7Nq1GycZkSnK
      KBhCQ5igpKSENiRef5BsP8TSZFgUVQs08QxhYCyH+qY2In7BJL+kMyaZIgSoWqCUUbVAQ5fw
      W5NS0traSk5ODoZxrNpHCJ25Z5w7cL/k6POTFqKiJE/CTVq0dS9/fXEjO7ZvG814FGVUJUwA
      o2AGpdlga6rWU5m4EiZAPBbBG8igsbFxNONRlFGVMAGkdInFYmRlZY1mPIoyqk6YAFJK/rl+
      PdFoBDs+Ni/9KcpIOGECCCFYcf7ZtHb1Ebdiox2TooyahHsA03Y5e+kZBDMTHwLZlklfJJq0
      4BQl2RKeA9TUHqQ31IHf60344uqqSg63dSQlMEUZDQkbwsxYFCk9ZGcn6vUrKSmZzoH9DZgz
      puFRpRApo0ohhi5hAlxwyapTljX0hcN4gkG8aTJDjCqFmHhO+K0JIU5jRRaUlM5UpRDKuDY2
      N2mKMkpUAihpTSWAktZUAihpTSWAktZUAihpTSWAktaGkQCSlsaD1NQeUG0Ayrg1rObDvphD
      lpBEpcTvujiOM1AK4TjOQGPazv2tRMyx11S/uHwSAZ8HTdOQUiKlPOltx5iELLsUTdNwpQuS
      /ttHSiRSdVtOmo9lWQghEELguu4pb9vbdyBtK+nf8WD5li3DFQLtSKu767onvR0P7ybW9Tq6
      pgHiyHqX6Hb/+vjG20IOuXhHUlNVhevAnMUL0aXEdd0TtiB/42cvsKd+7BXNPfClf6F0Sm6q
      w0iJhs98Dre7O9VhHKfkt79GCwRGbXnD2AMIysvLiNgSD6oUQhmfhnUI5DOC+FSfeWUcU1eB
      lLSmEkBJayoBlLSmEkBJa6obUZrKveGDSHPstQOIk/RBTwaVAGkqc+XKVIcwJgzrEKi9pZE9
      +w6OVCyKMuqGtQdoamkmd3LJQLmAPNIaPF6Mt3iVkTekBJCOxYGGw8xfeAaHavYQKy7Cf/Rv
      J6ysGJvtxJJE8SrpYkgJIHQf5aUltDY1oOXkERACyclGkxDDizJJtNMa/UKZyIZVC1RYPJ3C
      kYtFUUadagdQ0ppKACWtqQRQ0ppKACWtqQRQ0ppKACWtqQRQ0tqg2wGklNTurCCj9Gxih2vp
      iUnOPGPhSV/zvosXEuobe3ON5WePXudrZWwa1KgQ0XCI7kicXK2XNm0q8a4mgkiyZpZjHJkh
      Roix2eqrKCcyqD1AIDMHI8Nhz9ZqegzI16M0xySFaTJDjDLxDGNcoDeTJxkXSFHGqhHtEDNR
      SovfOALZeHZ02zYRDkuT9ZuM6B4AJsaXLaWcMJ8D1G9yMiOWUkfHnBwsNx6jqrr2pM9pba6n
      tTP0pseioVa27ayiubVz4LHDLS2DXv6JnO7nkK7Nrqqakz2DxkP7qT1Qf8K/2mYU03be9Fj9
      wf1UV1XREzEHHms5PLTPNbTfRFK1exfOSbaL+/dUUVVdgxU/fo+/Z3cl1TW1xN0jr7fCtHSG
      BxnD8U7nc/R1t1PXmPi7sqO97K6qprXj2LqU8j7BrU1NOFLS0dKANDIJtbcRjpr4A1nMn10K
      SHr6YhCxiXS1gDdIZ9thCvMyKJoxm77WA1S1HKAzJijMzcCnOVRW11E8vYT8LD+uP5+CLP8p
      4xiKno5WXMeho7Md04ZouItIXwzh9bN4wVxwLMKmxrw502k8WEtdSw9T8w28Gdm0NxxmclEe
      UvNSf+ggRUXFhMJ9+A0fi+bPpXbPHmq6uzGyJ+P3uMR6OmkNOxTmZeHVBYXTZuDVRn6LaPV1
      4ziS9s4uYhET6cSIhnvpiwvOWboEAAeduWWF7Nm7j+7uNgqLCunuipCZk43w+CmbnMHefXV0
      tzUzbWohUT2blroqjKwcAoFscE1KS0tHPPbDHSEcV1J/8CAZhofOqI3V142RM4OZJfk4lolp
      OwT8gopXXyWjYHKKG8KkpK2zC2H30ut4qdq2ndzsAMHsPOKWhWVZOFaU9vZO2to6cHQ/ZSVT
      yZ88lewMP6GuDuISwpEYBfn9g9y2tXfiJUpGTh679zWTn6SVH6D5cDu6iNPZY9JSV00gIwtf
      IBPHsbEsCzQPdrSX9s4uOrtC2JE+8AWZUVxIfuFUMvw64Z4e/Bm5GF4P00tL0aVDa0szuseL
      5QhysjMBSVcoTKSvlyy/TmdfPCkrP0BLcwvoGq2tnfR1NuAJZCKFDw0Xy7KQgG3GaG5pw6NL
      NG+QjKAPfzAD6cYxYxGa20PorokvmE3Q8GFHQlh46OkzsXqa0QM5Ix+4dOlsb6W7o41Ahp/K
      ulYM4ZCXk4ll2VhWHM0XoLiogAP79hJzNHKygiN3DjC0oCW2Hcfj9RCPx3EcB58meX3LNiYV
      lzGtKB+vR8dBQ3Md4oDf48F2HHRcOrt7yc3Px7WiRG1J0PAhnThRy0a4cTp6YpTPKE5a+JZt
      4/N6sO0jsXt1dmzdgj93CjOnT8Hv92ObMfpMG78Ocalj+L14vR5s20ETEoRGb0+IYGYWuqZj
      m1GilkNuTjaRcA/C68era1ixKFL3EulsgczJFOZmJukzWfi8PmzLRkoHj9fP3t3bCLt+Fs+b
      hc/vJ9IbwhEesjKC9IS6Mfwa++u7mDVzOmZfD8JjkBE0CHV3kZGZhRSCSDhMIBigrnYfs+cv
      wDPSCSxdbNvF44G41HBsC2lF2FZZSdm8ZeRnGfg8Gl1d3WTl5mFGetG8gRQngKKk2Pi/1qco
      w6ASQElrKgGUtKYSQElrKgGUtKYSQElrKgGUtKYSQElrKgGUtKYSQEmKx37zELfedhv/8/hT
      mHGXDWv/zuaqE1fFHseJUfH69pM8Icwt37kb5yTPeKuH77qFpnC8/+2tCH/670e44857VAIo
      ybF5ZxUf+sjHMRu28sen/klubgHZQY0NFZuREja/VoFpWVS8/BIbt1TiSsnrmyqordrO+vXr
      uP+Bn/L8ulewbZOX173Alsq9SAkN+6tZ/dwaWtq7Bpa1d9dW/v7U0zS3h2hvqmPLtm2sXv0c
      oYhJX6id1c88Tc3++oES7yd+9zCtFPKxD78/9eXQygSl6UyZWsx73vsufvi7l8jtimMsLGDD
      X/7I/AXlPP63Z4m01bKuKgQdtWgZ3+CxX/2E4oUrWL50Vv9Q+5rG6sceYW84i7Ynn8T4/Jf5
      8T0/5tp3XIH9ht6HVbt2Ut/UxIuv1fDhi0r4w0t7mZlt0u5kUPfPxyhbegmx6LFRSbZvreOz
      993IFMOj9gBK8kgp2bVzB4XF0488orF86Uz+8r9PMGvp+bQ0NdIb6iZn8lSsSBhv5iQ+/7nP
      suL8cykomMKlFy2nubGBnu5OCouLaas/QP6MRVx7zZUE9P5VV5ohXt1SzdSpUzGjUQDOvfBS
      LrngXCzbpiNs8d73vIuSoryBuKZNz2Xb9lqcuKUSQEmO/IDg6zd+gee2NPGR9/0LGVk5BA0v
      56+8jH+seYlLVi7n4lXX4fQ0sbeukYyMIJMmF6JrAnw5lGVHufXeh7nyuvfT1biXA41tFM9Z
      Qr7dwHdu/RGBvP7+H+gedKuHbdV1TC7Iwwhmkhk08BlBsjMMVq04h69+9Wu0hF08R3qVXf/v
      n2PDX3/JF770FVUOraQ3tQdQ0ppKACWtDVwFklJimubJnqsoE86bLoMOdeChcDhMZmZy+qgq
      SjINJIAQAp/PN6Q38Xq9Q36toqSSOgdQ0tqgWoJdu5ftlQeZUT6DzpZ6PME8ykZo2JHaxk7+
      +s/qgfuXLivjnHnJG9JkLJBS4jRtw+0+iHfhdQihtkejbVAJEI/FQNeIRLrQfZNwrTDSdXEc
      h3g8PqxA2rrCvLzj0MD92cV5LJ01wafhtqOYG38GvkzcvnY8yz4CKglG1eD2AJqfyflZ9PRE
      cMwQms9AaBq6ruPxDK+s6K3DqmuaNuz3HMuklFg7/oanbAW+pR/EfOVB4hsfwn/BFxG6N9Xh
      pY1BbW78wUxycnKZN3cuc+fNZs6cWYz/cYdTw+1twTnwMr4z3o/QffhX3IjwZxNbeyfSjqY6
      vLQxqAQQQiMrKwtdE/iNID6PmgxjKKR0sV57BN/ZH0V4++cpE5qO79xPoBctIvb8LchYT4qj
      TA/qgHO0SYnTuAUcC33G8jf9SQgN75L34ZlzBdHnbsLta09RkOlDJcAok3ETa9Nv8J336RNe
      9RFC4JmzCt/SDxF99ibc7gZA1Ssmi0qAUSSlxN79BPq0s9Bzpid8nhACfcZy/Bd+kdiLt+G0
      7UEV7SaHSoBRJPvaiNeuwbf0ejjFjCdCCDxFi/FfdhOx9ffhNG1VSZAECRPAtSO0tDSzaesu
      1Pc+fP0nvr/Cu/QGhC/j9F4kBHr+TAKrbsd67ZfE69arJBhhCRMg1lnPE8++TDiirkYMn8Rp
      3oGMhfCUXzToV2tZUzGuugt719+wq55SSTCCEiaAZuRw3XXXMLc08bGqcnpk3MLa9Ct8yz+N
      0IZ26VgL5hG46g6cQxuxtv4e6Q5mUBAlkYQJUPn6K6x7aT17DjaNZjwTjpQSu/oZ9MKFaHnl
      w3ov4cvEuOJmZKges+LnSMceoSjTV8IEWHLOBRhanLjz5qkwu1ob6QhFqT+wj+a2TnWB7hRk
      pBO75hl8Z/3biMxzKzwG/pVfBwSx9fch47FTvkZJ7ITFNlJKtmzagE2QjGBg4HHHjtHa3oII
      guYYxLo7kAW5uEcK4objrbPMSzn890w5KbFe/w2eRe/F9QRhxD6Phvfc/8Da9keiL96B/+Jv
      wemeWCtvkrDabMHCJdSseZ2aysNkZWWzZF45oc4OLNsh3NlNXtAA5MBkzMOdxv6tW8eReM9U
      cw7vQvY2413xFcSIfxYN46wPY1c/jfnirfgv+x5aMH+ElzHxnTABhBAYho9JU0ogHsOJdAOQ
      XzSNvEmTiVqCaLgDTyB7IAGGu3s//vXDf89Uko6FtemX+Jd/Hk1PUlWrEHgXXIswsjFfuBnj
      spvRsqcmZ1kTVMJDoM4+h8mZOr6sGSyeP3vgb0L3EQxAMDBl1IIcb6SU2HueR8srR5s0J6nL
      EkLgKV+J8GcRfeFWjEu+jZ5ffsqGNqVfwv3y/r3VNDQ109Ry+LhafeXkZKyb+O4n8J39sVHZ
      iwkh0IuXYaz8GrGX7ibeUqnaCk5Twn1zUXEpeUUQyEzCtPYTmJQSa/OjeBe+Ey2QO2rLFUKg
      T5pL4PJbiK29E9/ZH0Gfcf64PoxMJjfUiDR7EiWApLunB1dKystnjm5k45zbvhe3cz/+8z83
      +gsXAi13OsZVdxBbcwdesxfPnFUqCd7CjXYTW3M7aAlHhxZEe7ro6OimYmvl6EY3jkknjlnx
      C/znfSql3Rq1jMkYq35AfN9a7J2PI6V76helCelYmC/dg/eMfyXwjvsTnwOUzZrL3LlzKZ8+
      sUdmGClSSuL71qJlTUErXJjqcNCMbIwrbsNpq8ba9BukO7xBCyYCKV3MikfQJs3FM+syhO5N
      nAC9zTVUN3Szs1LtAU6HNHuxdj6O79xPjJlDDuENYFzybaQVxnzlAWTcSnVIKXO0JEX2teM7
      6yMDv9EJE0AIwcK3XY7Vtp+cvIJRDXQ8klJibf0fvPOuQQuOre9L6D78F3wBYeQSW3cX0oqk
      OqSUcJp3EK9ZjbHy64g3tMucpBy6gXbLR0BXx4+n4nbV4R7ejXfB21MdygkJzYPvnI+hT1lC
      9MXbcGOhVIc0qtyeJsxXH8S49CaE/81j2J4wAaSU2N4s8j0xQjH3DY+7RCIRHFdiWybx8V6r
      MwKkG8eq+AW+t/07Qh+746MKoeFd/B68c64k9tz3cMOtqQ5pVEirj9i6u/Cf/zlE9vHnswnb
      AXbt3EluwST8vmNXMxwzSmtrK1EzTjwWRfcHWDA/uS2dY5mUknjdy+DPRp96ZqrDOSUhBJ7Z
      V/SPP/T8LfgvvQk9b0aqw0oa6caJrf9/eOZciV687ITnZgkTINzbQ2fYJkMeSwDdH8QxI+ge
      HX9WEdIduaER31r56brusN8z2aTVh7X19/iuvH18Va4Wn41neYDY2jvwXPBl9MnzUx1REkjs
      Lb8DIwdtztUJf5+ExXArLzyP36/exJLiSQOPm3092FLH8GVj9rbiCeal7dCIUkqsysfxzrkC
      b84UGGdj5MmpS9AvvQnzpXvQ3/Yp9GlnjZmrV8MmJfb+l5DtNQRW3Y7wJD40TbiG6V4DbzzC
      gaY2Fhy5rG1k5jB//tHSiPRuH3BD9TiNmwm8437G28oPR0on8sswrritv9U4HsNTesGESAKn
      fS/29scwrr4H4fGf9LkJrwJZfR2cdfHVFOWrmV/eSrpO/4nvuZ845Rc8tgm07KkYq27H3v4Y
      8do1476Izu1rx1z/I/wXfxPNOHUtVsIECBSU0rTrVUw5dq9spISUOIc2guZFn3Z2qqMZEVrG
      JIxVd2DXrMauHr+jTkg7Rmzd3XjP+iha/szTKgk/aTtAyPGpOpK3kHYUa8uj+BMMbTheaYFc
      Ald+H+fgBuwd469+SLou5oafok87C0/Zhad9KJfwFxS+IE6kh0hUdbo+SkqJtfPP6GUr0LIm
      Xocg4c/EuPxmnLYqrM2PjpuhV6SU2Lv+gnQsfGd+YFDnMQkTwOP14bpxzJgaq/4ot7cZ5+Ar
      +Ja8b8L2uBqoHwofxqx4ZFwU0TkNm4jX/RPjwi8jtMFdOUyYAHZfN1n5U44brSFdSeliVbx5
      TP+JSnj8+C/6KrhWfxGdM3aL6JyuQ5gVj/SXOfiCg359wlKItqiXay5fwcLZpcMOciJwGjaD
      Yx83pv9EJXQv/vM/j/BnEfvHj8bk+ENurAfzpbsxVtyIyBzafHIJ9wA1u7azu6qK2gMNQw5w
      opB2DOv13+Bf/pkJdeJ7Kv1FdJ9AzysjtubOMVVJKh0b8x8/7O96WrRoyO0XCcqh4aKLLyEz
      M4uVKy6cqIe7p6V/TP+/oU87B5FTkupwRp3QdLxLr0eftqy/ktTsTXVI/R1bNv0aLXc6nrnD
      6/KZ4BAIXn3hr3SZOqFQ98Dw6Hasj6rqKvYdOMSuHduoqT0w4YdGlH2tR8b0/+CEaCUdCiE0
      vIvejXfWpcSevxk32pW6YKQkvud5ZKgR3zmfGPYeOeEp8+x5i3hl20ZCM2YxpXBy/5P9QTIN
      L56gQJPFuE7vxC6GkxKr4hH0M67H0fyQ6nhSTMy6Ak3zE33ue/gu/R4iY/Kox+Ae3oW962/4
      rroLR4ph/yYJi+EKcjOYNncpVuexyav72hto7IwwK7uAvp6D6IHsCV0MF2/ahjB78c26eMjD
      mk80+uxLcfwZWGu+j3H5zWg500Zt2W7vYcwND2Jcfgt6MG9ELkUnXMOCk2fi21dBfknZwGMZ
      k6ZxTt5UNE2jIHcJCG0cloGdHhm3sF77Jf6VX1cr/xsIIdCnvw2fxyD64m0Yl97UPxJdkkkr
      QmzdnfjP+xRa7vQRa4dJeAAVj4Upnb+MxfNmDixLiP6tsqZpaJqONkGPifs7UD+FXrQYLa8s
      1eGMOUII9KlnYFz0NWJr78Rpq0nq8qTrYL58P57yi9FLzh3Rc7GECeDELZ766+Osffm1tJsj
      TEY6saufxnfWh9P2xPdUhBBok+dhXPZdYuvvI968nWSsKFJKrO1/BI+Bd9G7Rvz3SJgAusdD
      Rm4B0wtHb3i/sUBKifX6r/Gd+UGEPyvV4YxpQgi0vDKMK27F2vAw8YZNI15JGj/wMk7j1v4+
      vUk4FE08S2TcpK+nm6ragyO+0LHMad2N29uCZ9ZlqQ5lXBBCoGdPw1h1B9bm/xrRmSydjn1Y
      Wx7tL3PwGiPynm+VuBjOl0lRQQ45eWky6YKUuH3tWK8+iH/5Z9WJ72AIgZZZiLHqB9iVfyG+
      57lhJ4Eb7cL8x70YK7+BSOLEHwlrgbZuXIfty6Gj7XDSFj5WSMfG2v0E0dXfxnvm9WgFs0/9
      IuU4WjC/v2NN7RrsXX8bchLIuIm57u7+32LSnKSehyW8DDpz8Xnoh5rQAxO376+UEretGnPD
      w2iT5xG89sf9x/3qxHfINCObwJXfJ7buLrAjeJdeP6jWWildzI0/RytahGfmJUm/CJFwaMQA
      fTR2WxP2UqcbDWG+/J+YFY/gv/CL/ZWPRrZa+UeA8AUxLv8eTmcd1qZfn37HGimxd/8dGQvh
      W/ahUbkCd5KmVpdYLEbUHLu14EMhXYf43hewdjyOb8l78V/wxZQOZT5RCY+Bcck3MV95AHPD
      T49cxTl5y368aSvx2hcIXH3voDu2DMZ3f7mW5o7+or7E+yY9SEfTfuoOHSuHltLl0KF6pJQ0
      1x+krXP8jDEppcTp2Ef06a/jHK4kcO19eOZdrVb+JBK6D/+KG0HzYK6/76Qda9xQI+aGnw65
      Y8tgdIejdPT0/0uYZh4jizOXLKKl49hKLuMWbV1dlEwrIBwTyGgrBXnZY3+eYDuCvfV3xFsq
      8Z33WfSiBUgEUvV2GwWif07jLY8SW3sXvou/CfpbhpKx+4it/QHe5Z9HZhThOMn9Xd54bp4w
      AVzHpr29nYysY8N9a16DrKABCKSUSCkRkJRpUkfiPUES378ee+vv8C64luC5nwRNbfFHndDx
      n/0x4pV/xnyxv4gO75GtvOsQW38f3vlvx1O8dHTCecNqlXCa1I0bNxLt7aa2sZMrVp4PgBUN
      Y9s2Le0RcjI1PMFiSNJE2TD095RS4oYasF59EPzZBK75ISJYoMoaUsx7xr+CN0Ds+Zsxrvw+
      wp+FtfVRtMxCvPOvSUlvu4R7gEhfGD2Yy7UXHMtKXyCTRQsXHbk3tiaCOEraMaxtf8Cpr8B3
      3qfRi5emVTfGsUwIgXfBOxDeILFnv4Nn5iW47XsxVt2est8oYQKUz1mA7WrY1vi4CiSlxKmv
      wHztV3hnXUbgugcGNWxhRyhCOHrssxZPysLrUa3BI61/iPbLwRvA3vYHjKvuTOm8Cgk7xMxf
      NPbHuwf6SxjCrZgbHgIgcNUPEJlFgz7c+eOaSl58fT8AmiZ46MZrKJ6kiuGSQQiBp/QCPDOW
      Q4r3zmN3/PHTIB0La+efideuwX/uf6DPeNuQd6XyyD9ISlWv8hZCCBCp38OOywSQUuI0b8fc
      8DCeGecRfOdDCI+hWnEHobGth0ef2zFw/4LFJVy8tCx1AaXIuEsAN9KJueGnYNQDAiAAAADS
      SURBVPYSuPxmRE6JurozBL0Ri427jzVylhRmpzCa1Bk3CSBdB3v3k9i7n8B39sfwlF+kSpaV
      YRvzCTBQsfnKA2hFiwm+66fgDaqtvjIixnQCuLEerIpf4Ibq8a/8Blp+uVrxlRE15AQIdbbj
      CWSTEUjGNVyJUb+WaOMGfEtvwH/RV9XhzgTSHorQ1Xts2P3phTkYvtRsi4e0VOmaNLV0gehg
      /oJ5IxiOpFDr4oaMF5gZXErwqofAn6W2+hPMMxv38r//qBq4/6PPXsnc6ampLPg/mrHzucrD
      E2UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delay cause for each airline' width='192'>
      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
      CYDQ2v8BboJw4abUFWEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Departure Delays for Each Airport and City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diverted and Cancelled Flights per Destination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Quaterly Delay Causes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Delays for Each Airport' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
